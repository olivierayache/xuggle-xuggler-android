plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-android-extensions'
    id 'maven-publish'
}

version '1.0.0-SNAPSHOT'

android {
    compileSdkVersion 31

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }

}

dependencies {
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    implementation 'androidx.coordinatorlayout:coordinatorlayout:1.2.0'
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'xuggle:xuggle-xuggler-android-all:5.7.0-SNAPSHOT'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

}

task generateSourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

afterEvaluate {
    publishing {
        publications {
            debug(MavenPublication) {
                artifact generateSourcesJar
                artifact bundleDebugAar { classifier 'debug' }
                artifact bundleReleaseAar
                pom {
                    groupId = 'xuggle'
                    packaging = 'aar'
                    description = 'Xuggler library extensions for Android'
                    url = 'https://github.com/olivierayache/xuggler-android-extensions'
                    licenses {
                        license {
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers {
                        developer {
                            name = 'Olivier Ayache'
                        }
                    }
                    scm {
                        connection = 'scm:git:git://github.com/olivierayache/xuggler-android-extensions'
                        developerConnection = 'scm:git:ssh://github.com/olivierayache/xuggler-android-extensions'
                        url = 'https://github.com/olivierayache/xuggler-android-extensions'
                    }
                }

                def dep = configurations.implementation.dependencies
                pom.withXml {
                    def dependenciesNode = asNode().appendNode('dependencies')
                    // Iterate over the api dependencies (we don't want the test ones), adding a <dependency> node for each
                    dep.each {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
        repositories {
            maven {
                // change URLs to point to your repos, e.g. http://my.org/repo
                def releasesRepoUrl = "$buildDir/repos/releases"
                def snapshotsRepoUrl = "$buildDir/repos/snapshots"
                url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
            }

            maven {
                name = "GitHubPackages"
                url = "https://maven.pkg.github.com/olivierayache/xuggle-xuggler-android"
                credentials {
                    username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
                    password = project.findProperty("gpr.key") ?: System.getenv("TOKEN")
                }

                maven {
                    name = "cloudsmith"
                    url = "https://api-g.cloudsmith.io/maven/olivier-ayache/xuggler-extensions/"
                    def releasesRepoUrl = "https://api-g.cloudsmith.io/maven/olivier-ayache/xuggler-extensions/"
                    def snapshotsRepoUrl = "https://api-g.cloudsmith.io/maven/olivier-ayache/xuggler-extensions/"
                    url = version.endsWith('SNAPSHOT') ? snapshotsRepoUrl : releasesRepoUrl
                    credentials {
                        username = project.findProperty("gpr.user") ?: System.getenv("CLOUDSMITH_DEPLOY_USERNAME")
                        password = project.findProperty("gpr.key") ?: System.getenv("CLOUDSMITH_DEPLOY_TOKEN")
                    }
                }
            }
        }
    }

}
